Question -1 
Longest Increasing Sequence
Have the function LongestIncreasingSequence(arr) take the array of positive integers 
stored in arr and return the length of the longest increasing subsequence (LIS). 
A LIS is a subset of the original list where the numbers are in sorted order, from lowest to highest, 
and are in increasing order. The sequence does not need to be contiguous or unique, and there can be several 
different subsequences. 
For example: if arr is [4, 3, 5, 1, 6] then a possible LIS is [3, 5, 6], and another is [1, 6]. 
For this input, your program should return 3 because that is the length of the longest increasing subsequence.
Examples
Input: new int[] {9, 9, 4, 2}
Output: 1
Input: new int[] {
    
}
Output: 7


Question - 2 
Moving Median
Have the function MovingMedian(arr) read the array of numbers stored in arr which will contain a 
sliding window size, N, as the first element in the array and the rest will be a list of numbers. 
Your program should return the Moving Median for each element based on the element and its N-1 predecessors,
where N is the sliding window size. The final output should be a string with the moving median corresponding 
to each entry in the original array separated by commas.

Note that for the first few elements (until the window size is reached), 
the median is computed on a smaller number of entries. For example: if arr is [3, 1, 3, 5, 10, 6, 4, 3, 1] 
then your program should output "1,2,3,5,6,6,4,3"
Examples
Input: new int[] {5, 2, 4, 6}
Output: 2,3,4
Input: new int[] {3, 0, 0, -2, 0, 2, 0, -2}
Output: 0,0,0,0,0,0,0